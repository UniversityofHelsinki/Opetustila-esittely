# Some config auto-added by core.
status: true
dependencies:
  enforced:
    module:
      - migrate_plus
#_core:
#  default_config_hash: 5QnAurLGG9HuEn-sH_Qmldhra2YGE9ZoVofepAtbumM
# This migration is for importing JSON data from Optime to HY Drupal sites.
# It's partially based on migrate_plus example migration "wine_role_json".
id: optime_integration
label: JSON import of spaces and related metadata from Optime
migration_group: optime
source:
  # We use the JSON source plugin.
  plugin: url
  data_fetcher_plugin: http
  data_parser_plugin: json
  # We can include the original JSON for more dynamic mapping.
  include_raw_data: true
  # headers <-- not set for now
  #  Accept: 'application/json; charset=utf-8'
  #  Content-Type: 'application/json'
  # Normally, this is one or more fully-qualified URLs or file paths. Because
  # we can't hardcode your local URL, we provide a relative path here which
  # hook_install() will rewrite to a full URL for the current site.
  # Currently hardcoded to test url.
  # urls: /modules/custom/migrate_optime_json/data/locations11_example.json
  #urls: '/modules/custom/migrate_optime_json/data/locations11_example.json'

  # JSON temporarily placed on another HY server files folder, to avoid very time consuming
  # problems relating to local lando (cant wget itself successfully) and
  # because Opetustilat dev/stage/prod are not functional.
  # Can be overridden per environment in settings.local.php with:
  #   $config['migrate_plus']['migration']['optime_integration']['urls'] = 'https://helpdesk.it.helsinki.fi/sites/default/files/testdata/test_full.json';
  #urls: 'https://helpdesk.it.helsinki.fi/sites/default/files/testdata/test_full.json'
  urls: 'https://esbmt1.it.helsinki.fi/optime/locations/?fromTimestamp=1'
  # urls:  http://tilat.lndo.site/modules/custom/migrate_optime_json/data/locations11_example.json
  # We might not need item selector.
  item_selector: 0
  # See http://agileadam.com/2017/09/extending-the-migrate-plus-json-parser-in-drupal-8/
  #item_selector: /response/variety
  constants:
    reservation_link_base: 'https://optime.helsinki.fi/Timetables/Room/'

  # Under 'fields', we list the data items to be imported. The first level keys
  # are the source field names we want to populate (the names to be used as
  # sources in the process configuration below). For each field we're importing,
  # we provide a label (optional - this is for display in migration tools) and
  # an xpath for retrieving that value. It's important to note that this xpath
  # is relative to the elements retrieved by item_xpath.
  fields:
    -
      name: optime_id
      label: 'Unique identifier containing building and space (optime)'
      selector: id
    -
      name: optime_index
      label: 'Unique identifier containing building and space (optime)'
      selector: optimeIndex
    -
      name: space_description
      label: 'Name or description of space, added to title'
      selector: description
    -
      name: building_description
      label: 'Building description including address, added to title'
      selector: buildingDescription
    -
      name: equipment
      label: 'Equipment terms (term references)'
      selector: equipment
    -
      name: campus
      label: 'Campus term (required term reference)'
      selector: campus
    -
      name: building_id
      label: 'Building ID (used in search)'
      selector: building
    -
      name: last_changed_in_optime
      label: 'Last changed in optime (UNIX timestamp)'
      selector: changeDate
    -
      name: inactivate_in_optime
      label: 'Inactive (boolean, both optime and drupal have a setting that can be used to disallow publishing))'
      selector: inactive
    -
      name: optime_comments
      label: 'Comments from optime (unlikely to be shown directly in Drupal)'
      selector: comments
    -
      name: legacy_url
      label: 'Url in the old system, might be used for comparing data'
      selector: url
    -
      name: room_type
      label: 'Room type (term reference)'
      selector: roomTypeDescription
    -
      name: capacity
      label: 'Room capacity (integer)'
      selector: capacity
    -
      name: street_address
      label: 'Street address (taken from building description, last part)'
      selector: buildingDescription
  # Optime source fields which are currently ignored
  #  "inactiveDate" <-- no use
  #  "roomType": "15" <-- we use the room description instead for autocreated terms.
  # -----------------------------------------------------------
  # Under 'ids', we identify source fields populated above which will uniquely
  # identify each imported item. The 'type' makes sure the migration map table
  # uses the proper schema type for stored the IDs.
  ids:
    optime_id:
      type: string

process:
  # Note that the source field names here were
  # defined by the 'fields' configuration for the source plugin above.
  #optime_id: optime_id
  # A few basic node attributes. Status is undefined, determined in presave_hook.
  type:
    plugin: default_value
    default_value: space

  title: space_description
  # The title source is normally building + space name.
  # This callback allows us to filter it based on a comma.
  # NOTE: currently unused, so we show the long name.
  #title:
  #  -
  #    plugin: callback
  #    callable: migrate_optime_json_get_name
  #    source: space_description
  # Alternative, combined title.
  #  plugin: concat
  #  source:
  #    - building_description
  #    - space_description
  #  delimiter: ' - '
  uid:
    plugin: default_value
    default_value: 1

 # Some simple 1:1 fields.
  field_optime_id: optime_id
  field_optime_index: optime_index
  field_building_id: building_id
  field_capacity: capacity
  #field_last_changed_in_optime: last_changed_in_optime
  field_last_changed_in_optime:
  # Convert int to string, otherwise substr fails.
    -
      plugin: concat
      source:
        - last_changed_in_optime
  # Convert millisecond timestamp to seconds (drop 000 at the end)
    -
      plugin: substr
      start: 0
      length: 10
    # This length should be valid for about the next 400 years.
    -
      plugin: 'format_date'
      from_format: 'U'
      to_format: 'Y-m-d\TH:i:s'
      from_timezone: 'UTC'
      to_timezone: 'UTC'
  # The API outputs there booleans as numeric strings ("0", "1").
  field_inactivate_in_optime: inactivate_in_optime
  field_optime_comments: optime_comments

  # Links need uri and title, which are currently hardcoded / static.
  field_legacy_url/uri: legacy_url
  field_legacy_url/title:
    plugin: default_value
    default_value: 'Legacy url'

  field_reservation_link/uri:
      plugin: concat
      source:
        - constants/reservation_link_base
        - optime_id
      delimiter: ''
  field_reservation_link/title:
    plugin: default_value
    default_value: 'Optime reservation'

  field_reservation_link/uri:
      plugin: concat
      source:
        - constants/reservation_link_base
        - optime_id
      delimiter: ''
  field_reservation_link/title':
    plugin: default_value
    default_value: 'Optime reservation'

  # Needs to be split by "," to get address.
  # There are a few cases without any "," in which case the full string is the address.
  field_street_address:
    -
      plugin: callback
      callable: migrate_optime_json_get_address
      source: street_address
    #-
    #  plugin: explode
    #  source: street_address
    #  delimiter: ', '
    #  strict: false
    #-
    #  plugin: extract
    #  index:
    #    - 1
    # TODO: if key 1 is empty, just use full string. A few spaces are like that.

  field_campus:
    -
      # Above: taxonomy_term reference field to populate
      # Plugin to use, see EntityGenerate.php.
      plugin: entity_generate
      # Field from source configuration
      source: campus
      # Value to compare in the bundle
      value_key: name
      # Bundle key value
      # If you get errors consider using only bundle
      bundle_key: vid
      # Bundle machine name
      bundle: campus
      # Type of entity
      entity_type: taxonomy_term
      # Set to true to ignore case on lookup
      ignore_case: true
      # Default, should used only for testing.
      #default_values:
        #name: "Test campus"
        # description: "Test campus description"
        #bundle: campus
  #-
  #  plugin: default_value
  #  default_value: 'Test campus'

  field_building:
    - # See Above: taxonomy_term reference field to populate
      plugin: entity_generate
      source: building_description
      value_key: name
      bundle: building
      entity_type: taxonomy_term
      ignore_case: true
      #default_values:
      #  name: "Building A"
      #  bundle: building
  #-
  #  plugin: default_value
  #  default_value: 'building A'

  field_equipment:
    -
      # See Above: taxonomy_term reference field to populate
      plugin: entity_generate
      source: equipment
      value_key: name
      bundle: equipment
      entity_type: taxonomy_term
      ignore_case: true

  field_room_type:
    -
      # See Above: taxonomy_term reference field to populate
      plugin: entity_generate
      source: room_type
      value_key: name
      bundle: room_type
      entity_type: taxonomy_term
      ignore_case: true

  field_accessibility:
    -
      # See Above: taxonomy_term reference field to populate
      plugin: entity_generate
      source: accessibility
      value_key: name
      bundle: equipment
      entity_type: taxonomy_term
      ignore_case: true
  #    default_values:
  #-
  #  plugin: default_value
  #  default_value: ''

destination:
  plugin: 'entity:node'
  default_bundle: space
  bundle: space

migration_dependencies: {}
